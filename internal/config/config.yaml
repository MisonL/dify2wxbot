# 应用配置示例
dify:
  api_key: ${DIFY_API_KEY}  # 必须通过环境变量设置
  base_url: "https://ai.qdama.cn"  # 必须使用HTTPS协议
  bot_type: "chat" # Dify 应用类型: "chat", "completion", "workflow"
  workflow_id: "" # 如果 bot_type 为 "workflow"，此处填写工作流ID
  default_prompt: "你好，我是Dify AI助手，有什么可以帮助你的吗？" # 默认提示词，用于定时任务或无消息时的默认输入

wecom:
  webhook_url: ${WECHAT_WEBHOOK_URL}  # 完整的Webhook URL(包含key参数)

auth_token: ${AUTH_TOKEN} # 用于 Webhook 认证的 Token，必须通过环境变量设置
enable_auth: false # 是否开启认证Token功能，默认关闭

log_to_file: false # 是否将日志输出到文件，默认关闭。如果设置为 true，日志将写入 log_file_path 指定的文件。
log_file_path: "app.log" # 日志文件路径，当 log_to_file 为 true 时生效。可以是相对路径或绝对路径。
log_max_size_mb: 100 # 日志文件最大大小 (MB)，达到此大小后会进行切割。默认 100MB。
log_max_backups: 7 # 日志文件最大备份数量，超出此数量的旧文件会被删除。默认保留 7 个备份。
log_max_age_days: 30 # 日志文件最大保留天数，超出此天数的旧文件会被删除。默认保留 30 天。
log_compress: true # 是否压缩旧的日志文件备份。默认 true (压缩)。

schedulers: # 定时任务配置列表，支持配置多个定时器
  - enable: false # 是否启用此定时任务 (true: 启用, false: 禁用)。如果同时配置了 cron_spec 和 interval/unit，cron_spec 优先。
    cron_spec: "" # Cron 表达式，用于更灵活的定时调度。例如: "0 0 * * *" (每天午夜), "0 9 * * 1-5" (周一至周五每天上午9点), "0 3 1 * *" (每月1日凌晨3点)。
    interval: 60 # 定时任务间隔时间 (当 cron_spec 为空时生效)。
    unit: "minute" # 时间单位: "second", "minute", "hour" (当 cron_spec 为空时生效)。
    target_url: "http://localhost:8080/webhook" # 定时调用的目标URL，通常是本服务的Webhook地址，用于触发本服务的统一消息处理逻辑。
    default_message: "定时任务触发，发送默认消息。" # 定时调用时发送的默认消息
  # 您可以添加更多定时器配置，例如：
  # - enable: false
  #   cron_spec: "0 10 * * *" # 每天上午10点触发
  #   target_url: "http://localhost:8080/webhook"
  #   default_message: "这是第二个定时任务的消息。"
  # - enable: false
  #   interval: 30
  #   unit: "second"
  #   target_url: "http://localhost:8080/webhook"
  #   default_message: "这是第三个定时任务的消息，每30秒触发一次。"
